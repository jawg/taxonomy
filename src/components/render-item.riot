<render-item onclick="{ onClick }">
  <popover onClose="{ onClose }" opened="{ this.state.popover }" style-props="{ props.styleProps }">
    <canvas if="{ props.type === 'canvas' }"></canvas>
    <slot></slot>
  </popover>
  <script>
    import popover from './popover.riot';
    export default {
      components: { popover },
      onMounted(props) {
        props.minHeight && (this.root.style['min-height'] = `${props.minHeight}px`);
        const container = props.type === 'canvas' ? this.$('canvas') : this.$('span');
        this.applyStyles(container, props.styleProps);
      },
      onClick(e) {
        this.update({ popover: !this.state.popover });
      },
      onClose(e) {
        this.update({ popover: false });
        e.stopPropagation();
      },
      applyStyles(container, style) {
        if (!container || !container.style || !style) {
          return;
        }
        Object.entries(style).forEach(([k, v]) => {
          container.style[k] = v;
        });
      },
    };
  </script>
  <style>
    :host {
      cursor: pointer;
    }
  </style>
</render-item>
