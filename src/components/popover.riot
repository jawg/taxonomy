<popover>
  <div class="popover-wrapper" if="{ props.opened && props.styleProps }">
    <div class="popover-dialog">
      <div class="popover-body" onclick="{ (e) => e.stopPropagation() }">
        <div class="popover-close" onclick="{ props.onClose }">
          <svg height="10" width="10">
            <line x1="0" y1="0" x2="10" y2="10" stroke="#000" stroke-width="1" />
            <line x1="0" y1="10" x2="10" y2="0" stroke="#000" stroke-width="1" />
          </svg>
        </div>
        <div each="{ style in Object.keys(props.styleProps) }">
          <template if="{ props.styleProps[style] }">
            { style }: <code onclick="{ copyToClipboard }">{ props.styleProps[style] }</code>
            <span if="{ style.indexOf('color') > -1}" class="popover-color" color="{ props.styleProps[style] }"></span>
          </template>
        </div>
      </div>
    </div>
  </div>
  <slot></slot>
  <script>
    export default {
      updateColors(props, state) {
        let elts = this.$$('.popover-color');
        for (let idx in elts) {
          elts[idx].style['background-color'] = elts[idx].getAttribute('color');
        }
      },
      onMounted(props, state) {
        this.updateColors(props, state);
      },
      onUpdated(props, state) {
        this.updateColors(props, state);
      },
      copyToClipboard(e) {
        navigator.clipboard.writeText(e.target.innerHTML);
        e.target.style['background-color'] = '#8bc34a';
        setTimeout(() => {
          e.target.style['background-color'] = null;
        }, 4000);
      },
    };
  </script>
  <style>
    :host {
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    .popover-wrapper {
      position: relative;
    }
    .popover-dialog {
      position: absolute;
      min-width: 10rem;
      bottom: 0;
      transform: translateX(-50%);
    }
    .popover-dialog::after {
      position: absolute;
      display: block;
      content: '';
      border-color: transparent;
      border-style: solid;
      border-width: 0.5rem 0.5rem 0;
      left: calc(50% - 0.25rem);
      bottom: 0;
      border-top-color: #fff;
    }
    .popover-body {
      font-size: 0.75rem;
      margin-bottom: 0.5rem;
      background-color: #fff;
      padding: 0.5rem;
      border-radius: 0.5rem 0.75rem;
      box-shadow: 0 2px 4px rgb(0 0 0 / 20%), 0 -1px 0 rgb(0 0 0 / 2%);
      cursor: default;
    }
    .popover-close {
      position: absolute;
      top: 0;
      right: 0;
      margin: 0.25em 0.5em;
      padding: 0.5em;
      line-height: 0;
      border-radius: 0.375rem;
      cursor: pointer;
    }
    .popover-close:hover {
      background-color: rgba(0, 0, 0, 0.1);
    }
    .popover-color {
      display: inline-block;
      border-radius: 50%;
      border: solid 1px rgba(0, 0, 0, 0.2);
      line-height: 0;
      margin: auto;
      margin-left: 0.5rem;
      width: 0.8rem;
      height: 0.8rem;
      background-color: #fff;
    }
    code {
      cursor: pointer;
      transition: background-color 0.5s ease-out;
    }
  </style>
</popover>
